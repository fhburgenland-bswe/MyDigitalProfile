name: CI/CD-Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bdodatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Repository auschecken
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      # Backend einrichten und starten
      - name: Backend-Abhängigkeiten installieren
        run: |
          cd backend
          ./mvnw clean install

      - name: Backend-Server starten
        run: |
          cd backend
          ./mvnw spring-boot:run &
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/bdodatabase
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres

      - name: Wait for Backend to be ready
        run: sleep 60

      # Frontend einrichten und starten
      - name: Node.js einrichten
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Frontend-Abhängigkeiten installieren
        run: |
          cd frontend
          npm install
          npm install --save vue3-toastify
          npm install -g json-server

      - name: JSON Server starten
        run: |
          cd frontend
          json-server --watch db.json --port 3001 &

      - name: Frontend-Server starten
        run: |
          cd frontend
          npm run dev &

      # Tests ausführen
      - name: Backend-Tests ausführen
        run: |
          cd backend
          ./mvnw test

      - name: Frontend-Tests ausführen
        run: |
          cd frontend
          npm run test:coverage

      - name: Linting ausführen
        run: |
          cd frontend
          npm run lint
